apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: prometheus
    release: prometheus-operator
  name: cern.prometheus-k8s.aggregated-rules.yaml
  namespace: kube-system
spec:
  groups:
  - interval: '{{.Values.evaluationInterval}}'
    name: cern.k8s.aggregated-rules
    rules:
    - expr: sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container!="POD"}[{{.Values.metricWindow}}]))
        by (namespace)
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:namespace:container_cpu_usage_seconds_total:sum_rate
    - expr: "sum by (namespace, pod, container) (\n  rate(container_cpu_usage_seconds_total{job=\"\
        kubelet\", image!=\"\", container!=\"POD\"}[{{.Values.metricWindow}}])\n)\
        \ * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)"
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
    - expr: 'container_memory_working_set_bytes{job="kubelet", image!=""}

        * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)'
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:node_namespace_pod_container:container_memory_working_set_bytes
    - expr: 'container_memory_rss{job="kubelet", image!=""}

        * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)'
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:node_namespace_pod_container:container_memory_rss
    - expr: 'container_memory_cache{job="kubelet", image!=""}

        * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)'
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:node_namespace_pod_container:container_memory_cache
    - expr: 'container_memory_swap{job="kubelet", image!=""}

        * on (namespace, pod) group_left(node) max by(namespace, pod, node) (kube_pod_info)'
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:node_namespace_pod_container:container_memory_swap
    - expr: sum(container_memory_usage_bytes{job="kubelet", image!="", container!="POD"})
        by (namespace)
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:namespace:container_memory_usage_bytes:sum
    - expr: "sum by (namespace, label_name) (\n    sum(kube_pod_container_resource_requests_memory_bytes{job=\"\
        kube-state-metrics\"} * on (endpoint, instance, job, namespace, pod, service)\
        \ group_left(phase) (kube_pod_status_phase{phase=~\"Pending|Running\"} ==\
        \ 1)) by (namespace, pod)\n  * on (namespace, pod)\n    group_left(label_name)\
        \ kube_pod_labels{job=\"kube-state-metrics\"}\n)"
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:namespace:kube_pod_container_resource_requests_memory_bytes:sum
    - expr: "sum by (namespace, label_name) (\n    sum(kube_pod_container_resource_requests_cpu_cores{job=\"\
        kube-state-metrics\"} * on (endpoint, instance, job, namespace, pod, service)\
        \ group_left(phase) (kube_pod_status_phase{phase=~\"Pending|Running\"} ==\
        \ 1)) by (namespace, pod)\n  * on (namespace, pod)\n    group_left(label_name)\
        \ kube_pod_labels{job=\"kube-state-metrics\"}\n)"
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
      record: cern:namespace:kube_pod_container_resource_requests_cpu_cores:sum
    - expr: "sum(\n  label_replace(\n    label_replace(\n      kube_pod_owner{job=\"\
        kube-state-metrics\", owner_kind=\"ReplicaSet\"},\n      \"replicaset\", \"\
        $1\", \"owner_name\", \"(.*)\"\n    ) * on(replicaset, namespace) group_left(owner_name)\
        \ kube_replicaset_owner{job=\"kube-state-metrics\"},\n    \"workload\", \"\
        $1\", \"owner_name\", \"(.*)\"\n  )\n) by (namespace, workload, pod)"
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
        workload_type: deployment
      record: cern:mixin_pod_workload
    - expr: "sum(\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\"\
        , owner_kind=\"DaemonSet\"},\n    \"workload\", \"$1\", \"owner_name\", \"\
        (.*)\"\n  )\n) by (namespace, workload, pod)"
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
        workload_type: daemonset
      record: cern:mixin_pod_workload
    - expr: "sum(\n  label_replace(\n    kube_pod_owner{job=\"kube-state-metrics\"\
        , owner_kind=\"StatefulSet\"},\n    \"workload\", \"$1\", \"owner_name\",\
        \ \"(.*)\"\n  )\n) by (namespace, workload, pod)"
      labels:
        aggregate: '{{.Values.evaluationInterval}}'
        workload_type: statefulset
      record: cern:mixin_pod_workload
